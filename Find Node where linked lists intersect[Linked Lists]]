----------------------------------BETTER----------------------------------------
class Solution {
public:

    int length(ListNode *head)
    {
        int len=0;
        while(head)
        {
            len++;
            head=head->next;
        }
        return len;
    }




    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int A=length(headA);
        int B=length(headB);

        int diff=abs(A-B);
        
        if(A>B)
        {
            while(diff--)
            {
                headA=headA->next;
            }
        }
        else
        {
            while(diff--)
            {
                headB=headB->next;
            }
        }

        while(headA!=headB)
        {
            headA=headA->next;
            headB=headB->next;
        }
        return headA;

    }
};



----------------------------------------------------------------------------




public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
      ListNode ptr1=headA;
      ListNode ptr2=headB;
      while(ptr1!=ptr2)
      {
          if(ptr1==null)
          {
              ptr1=headB;
          }
          else
          {
              ptr1=ptr1.next;
          }
           if(ptr2==null)
          {
              ptr2=headA;
          }
          else
          {
              ptr2=ptr2.next;
          }

      }
      return ptr1;
    }
}
